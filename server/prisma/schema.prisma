generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Community {
  id        String   @id @default(cuid())
  name      String
  address   String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  unit      Unit[]
}

model Tenancy {
  id                String             @id @default(cuid())
  unitId            String
  establishedDate   DateTime           @default(now())
  notes             String
  assignmentOfLease Boolean
  pet               Boolean
  documents         String[]
  activeStatus      Boolean
  previousTenancy   String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  unit              Unit               @relation(fields: [unitId], references: [id])
  tenancyVersions   Tenancy_Versions[]
  tenants           Tenant[]
}

model Tenancy_Versions {
  id                  String   @id @default(cuid())
  tenancyId           String
  recordEffectiveDate DateTime
  rent                String
  increaseDate        String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  tenancy             Tenancy  @relation(fields: [tenancyId], references: [id])
}

model Tenant {
  id        String   @id @default(cuid())
  tenancyId String
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tenancy   Tenancy  @relation(fields: [tenancyId], references: [id])
}

model Unit {
  id          String    @id @default(cuid())
  communityId String
  number      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  tenancies   Tenancy[]
  community   Community @relation(fields: [communityId], references: [id])
}
